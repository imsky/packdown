/*!

Packdown - Markdown-based file container format
Version 0.9.0
(c) 2015-2020 Ivan Malopinsky - http://imsky.co

License: MIT
Issues:  https://github.com/imsky/packdown/issues

*/

(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Packdown=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){var FOUR_SPACES="    ";function isSpaceEncoded(line){return line.slice(0,4)===FOUR_SPACES}function parser(input){var rFileHeading=/^\#{1,6} \/([a-z0-9\.\,\_\-\(\)\/]+)$/i;var rCodeHeading=/^```([a-z0-9][\-a-z0-9]*)$/i;var rCodeEnd=/^```$/;var document={files:{},content:[]};var text=String(input);var lines=text.split("\n");var line=lines[0];var stack=[];var file=null;for(var i=0,l=lines.length;i<l;i++){line=lines[i];file=null;var fileHeading=line.match(rFileHeading);var codeHeading=line.match(rCodeHeading);var codeEnd=line.match(rCodeEnd);var codeTag=codeHeading&&codeHeading[1];if(fileHeading){if(!stack.length){file={name:fileHeading[1],info:[],content:[],pending:true};document.files[file.name]=file;stack.push(file.name)}else{throw Error("File not finished parsing")}}else if(stack.length&&(codeHeading||codeEnd)){file=document.files[stack[0]];if(stack.length===1){file.tag=codeTag;stack.push(codeTag||"txt")}else if(stack.length===2&&!codeTag&&file.pending){delete file.pending;document.content.push({file:file.name});stack=[]}else{throw Error("Invalid code block")}}else{if(stack.length===1){document.files[stack[0]].info.push(line)}else if(stack.length===2){document.files[stack[0]].content.push(line)}else{document.content.push(line)}}}if(stack.length){throw Error("Invalid document")}return document}exports.read=function PackdownReader(input,options){options=options||{};if(input.slice(-1)!=="\n"){input+="\n"}var document=parser(input);Object.keys(document.files).forEach(function(fileName){var file=document.files[fileName];var spaceEncoding=false;var spaceEncodedLines=0;var lastLineSpaceEncoded=false;if(options.disableSpaceEncoding){return document}if(file.content.length>1){for(var i=0;i<file.content.length;i++){if(!file.content[i].length){continue}lastLineSpaceEncoded=isSpaceEncoded(file.content[i]);if(lastLineSpaceEncoded){spaceEncodedLines++;if(spaceEncodedLines>1){spaceEncoding=true;break}}else{if(i===0||lastLineSpaceEncoded){spaceEncoding=false;break}}}}else if(file.content.length===1&&isSpaceEncoded(file.content[0])){spaceEncoding=true}if(spaceEncoding){file.content=file.content.map(function(line){return line.replace(/^ {4}/,"")})}});return document};function FileBlock(file){var ret=[];var name=file.name;var info=file.info||"";var tag=file.tag||"";var content=file.content||"";var encoding=file.encoding||"space";if(!name){throw Error("File name is missing")}if(name.match(/\s/)){throw Error("File name contains spaces")}var FileHeader="### /"+name;ret.push(FileHeader);if(info){ret.push(info)}var CodeBlockStart="```"+tag;var encodedContent=content;if(typeof encodedContent==="string"){encodedContent=content.split("\n")}else if(!Array.isArray(encodedContent)){throw Error("File content is neither an array nor a string")}switch(encoding){case"space":encodedContent=encodedContent.map(function(line){return FOUR_SPACES+line}).join("\n");break}ret.push(CodeBlockStart,encodedContent,"```");return ret.join("\n")+"\n"}exports.write=function Writer(document){var content=document.content;var files=document.files;if(!content&&!files){throw Error("Document is missing content and files")}if((!content||!content.length)&&files&&Object(files)===files&&Object.keys(files).length){content=Object.keys(files).map(function(file){return{file:file}})}if(!Array.isArray(content)){throw Error("Invalid content provided")}if(Array.isArray(files)){throw Error("Files should be a map")}return content.map(function(line){if(line.file){return FileBlock(files[line.file])}else{return line}}).join("\n")};exports.version="PACKDOWN_VERSION"},{}]},{},[1])(1)});